{"name":"Python Generic Project Archetype","tagline":"A cookiecutter template that creates a basic Python setuptools project, which can be later on augmented with various optional accessories.","body":"## Features\r\n\r\nThe resulting project uses\r\n[rituals](https://github.com/jhermann/rituals)\r\nand [invoke](https://github.com/pyinvoke/invoke/)\r\nfor task automation, and\r\n[setuptools](https://bitbucket.org/pypa/setuptools)\r\nfor building and distributing the project.\r\nA provided [autoenv](https://github.com/kennethreitz/autoenv) script takes care\r\nof creating a fully boot-strapped `virtualenv` – it can also be used manually\r\nif you don't want to install `autoenv`.\r\n\r\nThe `setup.py` script follows the DRY principle and tries to\r\nminimize repetition of project metadata by loading it from other\r\nplaces (like the package's `__init__.py`). Incidently, this makes\r\nthe script almost identical between different projects, and thus\r\nprovides an easy update experience later on. Usually, the only specific\r\nthing in it is the docstring with the project's name and license notice.\r\nThis relies on conventions, specially check out\r\n[\\_\\_init\\_\\_.py](https://github.com/Springerle/py-generic-project/blob/master/%7B%7Bcookiecutter.repo_name%7D%7D/src/%7B%7Bcookiecutter.repo_name%7D%7D/__init__.py)\r\nand\r\n[\\_\\_main\\_\\_.py](https://github.com/Springerle/py-generic-project/blob/master/%7B%7Bcookiecutter.repo_name%7D%7D/src/%7B%7Bcookiecutter.repo_name%7D%7D/__main__.py)\r\nin the `src` folder, for their double-underscore meta variables.\r\n\r\nIt is also importable (by using the usual `if __name__ == '__main__'`\r\nidiom), and exposes the project's setup data in a `project` dict.\r\nThis allows other tools to exploit the contained data assembling code,\r\nand again supports the DRY principle. The `rituals` package\r\nuses that to provide Invoke tasks that work for any project, based on\r\nits project metadata.\r\n\r\nOther integrated tools are `pylint` for code quality checking,\r\n`pytest` for testing support, and a Travis CI configuration.\r\n\r\n\r\n## Using the Template\r\n\r\n### Preparations\r\n\r\nIn case you don't have the `cookiecutter` command line tool yet, here's\r\n[how to install](https://github.com/Springerle/springerle.github.io#installing-the-cookiecutter-cli) it.\r\n\r\n:loudspeaker: | For `py-generic-project` v1.2 and upwards, you need at least `cookiecutter` v1.0 – for `pipsi` installs, just issue a `pipsi upgrade cookiecutter` command and you're done.\r\n---- | :----\r\n\r\n\r\n### Project Creation\r\n\r\nCreating a new Python project based on this template goes like this (make sure\r\nyou're in the directory you want your project added to):\r\n\r\n```sh\r\ncookiecutter \"https://github.com/Springerle/py-generic-project.git\"\r\n```\r\n\r\nIt's advisable to `git add` the created directory directly afterwards, before any\r\ngenerated files are added, that you don't want to have in your repository.\r\n\r\n:bulb: | To get *your* defaults for common template values `cookiecutter` will ask you for when you use a template, it makes sense to have a [~/.cookiecutterrc](https://github.com/jhermann/ruby-slippers/blob/master/home/.cookiecutterrc) in your home directory. Follow the link to see an example.\r\n---- | :----\r\n\r\nYou should at least check these files regarding their content and adapt them according to your needs:\r\n\r\n * `` classifiers.txt`` – Add the correct [categories](http://pypi.python.org/pypi?:action=list_classifiers) (a/k/a Trove classifiers) for your project.\r\n * ``requirements.txt`` – Add any Python packages you need for your project _at runtime_.\r\n\r\nTo bootstrap the project (as mentioned, best after `git add`), use these commands from within its directory:\r\n\r\n```sh\r\n. .env # answer the prompt with (y)es\r\ninv ci | less -R\r\n\"$(basename $(pwd))\" --help\r\n```\r\n\r\n\r\n## References\r\n\r\n* [audreyr/cookiecutter](https://github.com/audreyr/cookiecutter)\r\n* [jhermann/rituals](https://github.com/jhermann/rituals)\r\n* [pyinvoke/invoke](https://github.com/pyinvoke/invoke)\r\n* [kennethreitz/autoenv](https://github.com/kennethreitz/autoenv)\r\n* [audreyr/cookiecutter-pypackage](https://github.com/audreyr/cookiecutter-pypackage)\r\n* [pypa/sampleproject](https://github.com/pypa/sampleproject)\r\n* [pypa/setuptools](https://bitbucket.org/pypa/setuptools)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}